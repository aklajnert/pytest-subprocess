# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    pypy3:
      python.version: 'pypy3'
      tox.env: 'pypy3'
      publish: 'true'
    Python34:
      python.version: '3.4'
      tox.env: 'py34'
      publish: 'true'
    Python35:
      python.version: '3.5'
      tox.env: 'py35'
      publish: 'true'
    Python36:
      python.version: '3.6'
      tox.env: 'py36'
      publish: 'true'
    Python37:
      python.version: '3.7'
      tox.env: 'py37'
      publish: 'true'
    Python38:
      python.version: '3.8'
      tox.env: 'py38'
      publish: 'true'
    Python39:
      python.version: '3.9'
      tox.env: 'py39'
      publish: 'true'
    Linting:
      python.version: '3.7'
      tox.env: 'flake8'
      publish: 'false'
    mypy:
      python.version: '3.7'
      tox.env: 'mypy'
      publish: 'false'
    check-stubs:
      python.version: '3.7'
      tox.env: 'retype'
      publish: 'false'

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
    condition: and(not(in(variables['python.version'], '3.4')), not(in(variables['python.version'], '3.9')))
    displayName: Use cached Python $(python.version) for tests.

  - script: |
      set -x
      sudo add-apt-repository ppa:deadsnakes
      sudo apt-get update
      sudo apt-get install -y --no-install-recommends python$(python.version)-dev
      sudo apt-get install -y --no-install-recommends python$(python.version)-venv
      sudo apt-get install -y --no-install-recommends python$(python.version)-distutils
      wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py
      sudo python$(python.version) /tmp/get-pip.py
      sudo chmod -R 777 /usr/local
    condition: or(in(variables['python.version'], '3.4'), in(variables['python.version'], '3.9'))
    displayName: Install Python $(python.version) from the deadsnakes PPA for tests.

  - script: |
      pip install --upgrade pip tox codecov
    displayName: 'Install dependencies'

  - script: |
      tox -e $(tox.env)
    displayName: 'tox -e $(tox.env)'

  - script: |
      codecov -t $(CODECOV_TOKEN)
    displayName: 'publish coverage'
    condition: not(in(variables['python.version'], '3.9'))

  - task: PublishTestResults@2
    condition: and(succeededOrFailed(), eq(variables['publish'], 'true'))
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'


